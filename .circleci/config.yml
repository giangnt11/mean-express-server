version: 2
jobs:
  build:
    docker:
      - image: google/cloud-sdk:alpine
    working_directory: ~/repo
    steps:
      - checkout
      - setup_remote_docker
      - run: 
          name: Check Gcloud version #1
          command: gcloud version
      - run: 
          name: Install Docker client #2
          command: |
            curl -fSL "https://get.docker.com/builds/Linux/x86_64/docker-17.03.0-ce.tgz" -o docker.tgz
            tar -xzvf docker.tgz
            mv docker/* /usr/local/bin/
            rmdir docker
            rm docker.tgz
            docker -v
      - run:
          name: Build Docker image #4
          command: |
            docker build . -t giangnguyen/express-server:dev
      - run:
          name: Push Docker Image to GCR registry #5
          command: |
             docker login -u $HUB_ACCOUNT -p $HUB_PASS
             docker push giangnguyen/express-server:dev
  deploy:
    docker:
      - image: google/cloud-sdk:alpine
    working_directory: ~/repo
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Authenticate gcloud SDK with GCP project #1
          command: |
            echo $SERVICE_ACCOUNT_KEY > ${HOME}/gcp-key.json
            gcloud auth activate-service-account --key-file ${HOME}/gcp-key.json
            gcloud container clusters get-credentials $CLUSTER_NAME --zone $CLUSTER_ZONE --project $PROJECT_ID
      - run:
          name: Install kubectl
          command: gcloud components install kubectl
      - run:
          name: Deploy container to Dev Kubernetes cluster
          command: |
            kubectl apply -f deployment.yaml --record
            kubectl rollout status deployment/${CIRCLE_PROJECT_REPONAME}
workflows:
  version: 2
  build_and_deploy:
    jobs:
      - build
      - deploy:
          requires:
            - build